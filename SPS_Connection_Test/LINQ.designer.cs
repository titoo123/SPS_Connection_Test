#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPS_Connection_Test
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ioDB")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertAuftrag(Auftrag instance);
    partial void UpdateAuftrag(Auftrag instance);
    partial void DeleteAuftrag(Auftrag instance);
    partial void InsertGlühung(Glühung instance);
    partial void UpdateGlühung(Glühung instance);
    partial void DeleteGlühung(Glühung instance);
    partial void InsertOfen(Ofen instance);
    partial void UpdateOfen(Ofen instance);
    partial void DeleteOfen(Ofen instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::SPS_Connection_Test.Properties.Settings.Default.ioDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Auftrag> Auftrag
		{
			get
			{
				return this.GetTable<Auftrag>();
			}
		}
		
		public System.Data.Linq.Table<Glühung> Glühung
		{
			get
			{
				return this.GetTable<Glühung>();
			}
		}
		
		public System.Data.Linq.Table<Ofen> Ofen
		{
			get
			{
				return this.GetTable<Ofen>();
			}
		}
		
		public System.Data.Linq.Table<Material> Material
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auftrag")]
	public partial class Auftrag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AuftragsNr;
		
		private string _ODL;
		
		private string _Art;
		
		private string _Verarbeitung;
		
		private string _Lagerort;
		
		private string _Position;
		
		private string _Status;
		
		private System.Nullable<double> _Abmessung1;
		
		private System.Nullable<double> _Abmessung2;
		
		private System.Nullable<double> _FLänge;
		
		private System.Nullable<double> _WLänge;
		
		private string _Charge;
		
		private string _Stahlsorte;
		
		private string _Walzung;
		
		private System.Nullable<System.DateTime> _Auftragsdatum;
		
		private System.Nullable<System.DateTime> _Liefertermin;
		
		private string _TechnischeAnmerkungen;
		
		private string _Bemerkungen;
		
		private System.Nullable<int> _SägeProgramm;
		
		private System.Nullable<double> _Anlasstemparartur;
		
		private System.Nullable<bool> _Wichtig;
		
		private System.Nullable<int> _Id_Kunde;
		
		private System.Nullable<int> _Id_Bestimmungsort;
		
		private System.Nullable<double> _C;
		
		private System.Nullable<double> _Mn;
		
		private System.Nullable<double> _Si;
		
		private System.Nullable<double> _P;
		
		private System.Nullable<double> _S;
		
		private System.Nullable<double> _Cr;
		
		private System.Nullable<double> _Ni;
		
		private System.Nullable<double> _Mo;
		
		private EntitySet<Material> _Material;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAuftragsNrChanging(string value);
    partial void OnAuftragsNrChanged();
    partial void OnODLChanging(string value);
    partial void OnODLChanged();
    partial void OnArtChanging(string value);
    partial void OnArtChanged();
    partial void OnVerarbeitungChanging(string value);
    partial void OnVerarbeitungChanged();
    partial void OnLagerortChanging(string value);
    partial void OnLagerortChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAbmessung1Changing(System.Nullable<double> value);
    partial void OnAbmessung1Changed();
    partial void OnAbmessung2Changing(System.Nullable<double> value);
    partial void OnAbmessung2Changed();
    partial void OnFLängeChanging(System.Nullable<double> value);
    partial void OnFLängeChanged();
    partial void OnWLängeChanging(System.Nullable<double> value);
    partial void OnWLängeChanged();
    partial void OnChargeChanging(string value);
    partial void OnChargeChanged();
    partial void OnStahlsorteChanging(string value);
    partial void OnStahlsorteChanged();
    partial void OnWalzungChanging(string value);
    partial void OnWalzungChanged();
    partial void OnAuftragsdatumChanging(System.Nullable<System.DateTime> value);
    partial void OnAuftragsdatumChanged();
    partial void OnLieferterminChanging(System.Nullable<System.DateTime> value);
    partial void OnLieferterminChanged();
    partial void OnTechnischeAnmerkungenChanging(string value);
    partial void OnTechnischeAnmerkungenChanged();
    partial void OnBemerkungenChanging(string value);
    partial void OnBemerkungenChanged();
    partial void OnSägeProgrammChanging(System.Nullable<int> value);
    partial void OnSägeProgrammChanged();
    partial void OnAnlasstempararturChanging(System.Nullable<double> value);
    partial void OnAnlasstempararturChanged();
    partial void OnWichtigChanging(System.Nullable<bool> value);
    partial void OnWichtigChanged();
    partial void OnId_KundeChanging(System.Nullable<int> value);
    partial void OnId_KundeChanged();
    partial void OnId_BestimmungsortChanging(System.Nullable<int> value);
    partial void OnId_BestimmungsortChanged();
    partial void OnCChanging(System.Nullable<double> value);
    partial void OnCChanged();
    partial void OnMnChanging(System.Nullable<double> value);
    partial void OnMnChanged();
    partial void OnSiChanging(System.Nullable<double> value);
    partial void OnSiChanged();
    partial void OnPChanging(System.Nullable<double> value);
    partial void OnPChanged();
    partial void OnSChanging(System.Nullable<double> value);
    partial void OnSChanged();
    partial void OnCrChanging(System.Nullable<double> value);
    partial void OnCrChanged();
    partial void OnNiChanging(System.Nullable<double> value);
    partial void OnNiChanged();
    partial void OnMoChanging(System.Nullable<double> value);
    partial void OnMoChanged();
    #endregion
		
		public Auftrag()
		{
			this._Material = new EntitySet<Material>(new Action<Material>(this.attach_Material), new Action<Material>(this.detach_Material));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuftragsNr", DbType="VarChar(10)")]
		public string AuftragsNr
		{
			get
			{
				return this._AuftragsNr;
			}
			set
			{
				if ((this._AuftragsNr != value))
				{
					this.OnAuftragsNrChanging(value);
					this.SendPropertyChanging();
					this._AuftragsNr = value;
					this.SendPropertyChanged("AuftragsNr");
					this.OnAuftragsNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODL", DbType="VarChar(10)")]
		public string ODL
		{
			get
			{
				return this._ODL;
			}
			set
			{
				if ((this._ODL != value))
				{
					this.OnODLChanging(value);
					this.SendPropertyChanging();
					this._ODL = value;
					this.SendPropertyChanged("ODL");
					this.OnODLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art", DbType="VarChar(50)")]
		public string Art
		{
			get
			{
				return this._Art;
			}
			set
			{
				if ((this._Art != value))
				{
					this.OnArtChanging(value);
					this.SendPropertyChanging();
					this._Art = value;
					this.SendPropertyChanged("Art");
					this.OnArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verarbeitung", DbType="VarChar(50)")]
		public string Verarbeitung
		{
			get
			{
				return this._Verarbeitung;
			}
			set
			{
				if ((this._Verarbeitung != value))
				{
					this.OnVerarbeitungChanging(value);
					this.SendPropertyChanging();
					this._Verarbeitung = value;
					this.SendPropertyChanged("Verarbeitung");
					this.OnVerarbeitungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lagerort", DbType="VarChar(20)")]
		public string Lagerort
		{
			get
			{
				return this._Lagerort;
			}
			set
			{
				if ((this._Lagerort != value))
				{
					this.OnLagerortChanging(value);
					this.SendPropertyChanging();
					this._Lagerort = value;
					this.SendPropertyChanged("Lagerort");
					this.OnLagerortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(5)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abmessung1", DbType="Float")]
		public System.Nullable<double> Abmessung1
		{
			get
			{
				return this._Abmessung1;
			}
			set
			{
				if ((this._Abmessung1 != value))
				{
					this.OnAbmessung1Changing(value);
					this.SendPropertyChanging();
					this._Abmessung1 = value;
					this.SendPropertyChanged("Abmessung1");
					this.OnAbmessung1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abmessung2", DbType="Float")]
		public System.Nullable<double> Abmessung2
		{
			get
			{
				return this._Abmessung2;
			}
			set
			{
				if ((this._Abmessung2 != value))
				{
					this.OnAbmessung2Changing(value);
					this.SendPropertyChanging();
					this._Abmessung2 = value;
					this.SendPropertyChanged("Abmessung2");
					this.OnAbmessung2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLänge", DbType="Float")]
		public System.Nullable<double> FLänge
		{
			get
			{
				return this._FLänge;
			}
			set
			{
				if ((this._FLänge != value))
				{
					this.OnFLängeChanging(value);
					this.SendPropertyChanging();
					this._FLänge = value;
					this.SendPropertyChanged("FLänge");
					this.OnFLängeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WLänge", DbType="Float")]
		public System.Nullable<double> WLänge
		{
			get
			{
				return this._WLänge;
			}
			set
			{
				if ((this._WLänge != value))
				{
					this.OnWLängeChanging(value);
					this.SendPropertyChanging();
					this._WLänge = value;
					this.SendPropertyChanged("WLänge");
					this.OnWLängeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charge", DbType="VarChar(5)")]
		public string Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				if ((this._Charge != value))
				{
					this.OnChargeChanging(value);
					this.SendPropertyChanging();
					this._Charge = value;
					this.SendPropertyChanged("Charge");
					this.OnChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stahlsorte", DbType="VarChar(20)")]
		public string Stahlsorte
		{
			get
			{
				return this._Stahlsorte;
			}
			set
			{
				if ((this._Stahlsorte != value))
				{
					this.OnStahlsorteChanging(value);
					this.SendPropertyChanging();
					this._Stahlsorte = value;
					this.SendPropertyChanged("Stahlsorte");
					this.OnStahlsorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Walzung", DbType="VarChar(20)")]
		public string Walzung
		{
			get
			{
				return this._Walzung;
			}
			set
			{
				if ((this._Walzung != value))
				{
					this.OnWalzungChanging(value);
					this.SendPropertyChanging();
					this._Walzung = value;
					this.SendPropertyChanged("Walzung");
					this.OnWalzungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auftragsdatum", DbType="Date")]
		public System.Nullable<System.DateTime> Auftragsdatum
		{
			get
			{
				return this._Auftragsdatum;
			}
			set
			{
				if ((this._Auftragsdatum != value))
				{
					this.OnAuftragsdatumChanging(value);
					this.SendPropertyChanging();
					this._Auftragsdatum = value;
					this.SendPropertyChanged("Auftragsdatum");
					this.OnAuftragsdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liefertermin", DbType="Date")]
		public System.Nullable<System.DateTime> Liefertermin
		{
			get
			{
				return this._Liefertermin;
			}
			set
			{
				if ((this._Liefertermin != value))
				{
					this.OnLieferterminChanging(value);
					this.SendPropertyChanging();
					this._Liefertermin = value;
					this.SendPropertyChanged("Liefertermin");
					this.OnLieferterminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnischeAnmerkungen", DbType="VarChar(MAX)")]
		public string TechnischeAnmerkungen
		{
			get
			{
				return this._TechnischeAnmerkungen;
			}
			set
			{
				if ((this._TechnischeAnmerkungen != value))
				{
					this.OnTechnischeAnmerkungenChanging(value);
					this.SendPropertyChanging();
					this._TechnischeAnmerkungen = value;
					this.SendPropertyChanged("TechnischeAnmerkungen");
					this.OnTechnischeAnmerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkungen", DbType="VarChar(MAX)")]
		public string Bemerkungen
		{
			get
			{
				return this._Bemerkungen;
			}
			set
			{
				if ((this._Bemerkungen != value))
				{
					this.OnBemerkungenChanging(value);
					this.SendPropertyChanging();
					this._Bemerkungen = value;
					this.SendPropertyChanged("Bemerkungen");
					this.OnBemerkungenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SägeProgramm", DbType="Int")]
		public System.Nullable<int> SägeProgramm
		{
			get
			{
				return this._SägeProgramm;
			}
			set
			{
				if ((this._SägeProgramm != value))
				{
					this.OnSägeProgrammChanging(value);
					this.SendPropertyChanging();
					this._SägeProgramm = value;
					this.SendPropertyChanged("SägeProgramm");
					this.OnSägeProgrammChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anlasstemparartur", DbType="Float")]
		public System.Nullable<double> Anlasstemparartur
		{
			get
			{
				return this._Anlasstemparartur;
			}
			set
			{
				if ((this._Anlasstemparartur != value))
				{
					this.OnAnlasstempararturChanging(value);
					this.SendPropertyChanging();
					this._Anlasstemparartur = value;
					this.SendPropertyChanged("Anlasstemparartur");
					this.OnAnlasstempararturChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wichtig", DbType="Bit")]
		public System.Nullable<bool> Wichtig
		{
			get
			{
				return this._Wichtig;
			}
			set
			{
				if ((this._Wichtig != value))
				{
					this.OnWichtigChanging(value);
					this.SendPropertyChanging();
					this._Wichtig = value;
					this.SendPropertyChanged("Wichtig");
					this.OnWichtigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Kunde", DbType="Int")]
		public System.Nullable<int> Id_Kunde
		{
			get
			{
				return this._Id_Kunde;
			}
			set
			{
				if ((this._Id_Kunde != value))
				{
					this.OnId_KundeChanging(value);
					this.SendPropertyChanging();
					this._Id_Kunde = value;
					this.SendPropertyChanged("Id_Kunde");
					this.OnId_KundeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Bestimmungsort", DbType="Int")]
		public System.Nullable<int> Id_Bestimmungsort
		{
			get
			{
				return this._Id_Bestimmungsort;
			}
			set
			{
				if ((this._Id_Bestimmungsort != value))
				{
					this.OnId_BestimmungsortChanging(value);
					this.SendPropertyChanging();
					this._Id_Bestimmungsort = value;
					this.SendPropertyChanged("Id_Bestimmungsort");
					this.OnId_BestimmungsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="Float")]
		public System.Nullable<double> C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mn", DbType="Float")]
		public System.Nullable<double> Mn
		{
			get
			{
				return this._Mn;
			}
			set
			{
				if ((this._Mn != value))
				{
					this.OnMnChanging(value);
					this.SendPropertyChanging();
					this._Mn = value;
					this.SendPropertyChanged("Mn");
					this.OnMnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Si", DbType="Float")]
		public System.Nullable<double> Si
		{
			get
			{
				return this._Si;
			}
			set
			{
				if ((this._Si != value))
				{
					this.OnSiChanging(value);
					this.SendPropertyChanging();
					this._Si = value;
					this.SendPropertyChanged("Si");
					this.OnSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P", DbType="Float")]
		public System.Nullable<double> P
		{
			get
			{
				return this._P;
			}
			set
			{
				if ((this._P != value))
				{
					this.OnPChanging(value);
					this.SendPropertyChanging();
					this._P = value;
					this.SendPropertyChanged("P");
					this.OnPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S", DbType="Float")]
		public System.Nullable<double> S
		{
			get
			{
				return this._S;
			}
			set
			{
				if ((this._S != value))
				{
					this.OnSChanging(value);
					this.SendPropertyChanging();
					this._S = value;
					this.SendPropertyChanged("S");
					this.OnSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cr", DbType="Float")]
		public System.Nullable<double> Cr
		{
			get
			{
				return this._Cr;
			}
			set
			{
				if ((this._Cr != value))
				{
					this.OnCrChanging(value);
					this.SendPropertyChanging();
					this._Cr = value;
					this.SendPropertyChanged("Cr");
					this.OnCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ni", DbType="Float")]
		public System.Nullable<double> Ni
		{
			get
			{
				return this._Ni;
			}
			set
			{
				if ((this._Ni != value))
				{
					this.OnNiChanging(value);
					this.SendPropertyChanging();
					this._Ni = value;
					this.SendPropertyChanged("Ni");
					this.OnNiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mo", DbType="Float")]
		public System.Nullable<double> Mo
		{
			get
			{
				return this._Mo;
			}
			set
			{
				if ((this._Mo != value))
				{
					this.OnMoChanging(value);
					this.SendPropertyChanging();
					this._Mo = value;
					this.SendPropertyChanged("Mo");
					this.OnMoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrag_Material", Storage="_Material", ThisKey="Id", OtherKey="Id_Auftrag")]
		public EntitySet<Material> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Auftrag = this;
		}
		
		private void detach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Auftrag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Glühung")]
	public partial class Glühung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Erstellungsdatum;
		
		private System.Nullable<System.DateTime> _Start;
		
		private System.Nullable<System.DateTime> _Ende;
		
		private string _Name;
		
		private string _Status;
		
		private System.Nullable<int> _Gewicht;
		
		private System.Nullable<int> _Id_Ofen;
		
		private string _Id_Intern;
		
		private EntitySet<Material> _Material;
		
		private EntityRef<Ofen> _Ofen;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnErstellungsdatumChanging(System.Nullable<System.DateTime> value);
    partial void OnErstellungsdatumChanged();
    partial void OnStartChanging(System.Nullable<System.DateTime> value);
    partial void OnStartChanged();
    partial void OnEndeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnGewichtChanging(System.Nullable<int> value);
    partial void OnGewichtChanged();
    partial void OnId_OfenChanging(System.Nullable<int> value);
    partial void OnId_OfenChanged();
    partial void OnId_InternChanging(string value);
    partial void OnId_InternChanged();
    #endregion
		
		public Glühung()
		{
			this._Material = new EntitySet<Material>(new Action<Material>(this.attach_Material), new Action<Material>(this.detach_Material));
			this._Ofen = default(EntityRef<Ofen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Erstellungsdatum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Erstellungsdatum
		{
			get
			{
				return this._Erstellungsdatum;
			}
			set
			{
				if ((this._Erstellungsdatum != value))
				{
					this.OnErstellungsdatumChanging(value);
					this.SendPropertyChanging();
					this._Erstellungsdatum = value;
					this.SendPropertyChanged("Erstellungsdatum");
					this.OnErstellungsdatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start", DbType="DateTime")]
		public System.Nullable<System.DateTime> Start
		{
			get
			{
				return this._Start;
			}
			set
			{
				if ((this._Start != value))
				{
					this.OnStartChanging(value);
					this.SendPropertyChanging();
					this._Start = value;
					this.SendPropertyChanged("Start");
					this.OnStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ende", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ende
		{
			get
			{
				return this._Ende;
			}
			set
			{
				if ((this._Ende != value))
				{
					this.OnEndeChanging(value);
					this.SendPropertyChanging();
					this._Ende = value;
					this.SendPropertyChanged("Ende");
					this.OnEndeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewicht", DbType="Int")]
		public System.Nullable<int> Gewicht
		{
			get
			{
				return this._Gewicht;
			}
			set
			{
				if ((this._Gewicht != value))
				{
					this.OnGewichtChanging(value);
					this.SendPropertyChanging();
					this._Gewicht = value;
					this.SendPropertyChanged("Gewicht");
					this.OnGewichtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ofen", DbType="Int")]
		public System.Nullable<int> Id_Ofen
		{
			get
			{
				return this._Id_Ofen;
			}
			set
			{
				if ((this._Id_Ofen != value))
				{
					if (this._Ofen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_OfenChanging(value);
					this.SendPropertyChanging();
					this._Id_Ofen = value;
					this.SendPropertyChanged("Id_Ofen");
					this.OnId_OfenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Intern", DbType="NChar(8)")]
		public string Id_Intern
		{
			get
			{
				return this._Id_Intern;
			}
			set
			{
				if ((this._Id_Intern != value))
				{
					this.OnId_InternChanging(value);
					this.SendPropertyChanging();
					this._Id_Intern = value;
					this.SendPropertyChanged("Id_Intern");
					this.OnId_InternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Glühung_Material", Storage="_Material", ThisKey="Id", OtherKey="Id_Glühung")]
		public EntitySet<Material> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ofen_Glühung", Storage="_Ofen", ThisKey="Id_Ofen", OtherKey="Id", IsForeignKey=true)]
		public Ofen Ofen
		{
			get
			{
				return this._Ofen.Entity;
			}
			set
			{
				Ofen previousValue = this._Ofen.Entity;
				if (((previousValue != value) 
							|| (this._Ofen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ofen.Entity = null;
						previousValue.Glühung.Remove(this);
					}
					this._Ofen.Entity = value;
					if ((value != null))
					{
						value.Glühung.Add(this);
						this._Id_Ofen = value.Id;
					}
					else
					{
						this._Id_Ofen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ofen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Glühung = this;
		}
		
		private void detach_Material(Material entity)
		{
			this.SendPropertyChanging();
			entity.Glühung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ofen")]
	public partial class Ofen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private EntitySet<Glühung> _Glühung;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public Ofen()
		{
			this._Glühung = new EntitySet<Glühung>(new Action<Glühung>(this.attach_Glühung), new Action<Glühung>(this.detach_Glühung));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ofen_Glühung", Storage="_Glühung", ThisKey="Id", OtherKey="Id_Ofen")]
		public EntitySet<Glühung> Glühung
		{
			get
			{
				return this._Glühung;
			}
			set
			{
				this._Glühung.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Glühung(Glühung entity)
		{
			this.SendPropertyChanging();
			entity.Ofen = this;
		}
		
		private void detach_Glühung(Glühung entity)
		{
			this.SendPropertyChanging();
			entity.Ofen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Datum;
		
		private string _Bunde;
		
		private string _Stahlsorte;
		
		private string _Charge;
		
		private System.Nullable<int> _Anzahl;
		
		private System.Nullable<int> _Gewicht;
		
		private System.Nullable<int> _Id_Glühung;
		
		private int _Id_Auftrag;
		
		private EntityRef<Auftrag> _Auftrag;
		
		private EntityRef<Glühung> _Glühung;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumChanged();
    partial void OnBundeChanging(string value);
    partial void OnBundeChanged();
    partial void OnStahlsorteChanging(string value);
    partial void OnStahlsorteChanged();
    partial void OnChargeChanging(string value);
    partial void OnChargeChanged();
    partial void OnAnzahlChanging(System.Nullable<int> value);
    partial void OnAnzahlChanged();
    partial void OnGewichtChanging(System.Nullable<int> value);
    partial void OnGewichtChanged();
    partial void OnId_GlühungChanging(System.Nullable<int> value);
    partial void OnId_GlühungChanged();
    partial void OnId_AuftragChanging(int value);
    partial void OnId_AuftragChanged();
    #endregion
		
		public Material()
		{
			this._Auftrag = default(EntityRef<Auftrag>);
			this._Glühung = default(EntityRef<Glühung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime")]
		public System.Nullable<System.DateTime> Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bunde", DbType="NChar(7)")]
		public string Bunde
		{
			get
			{
				return this._Bunde;
			}
			set
			{
				if ((this._Bunde != value))
				{
					this.OnBundeChanging(value);
					this.SendPropertyChanging();
					this._Bunde = value;
					this.SendPropertyChanged("Bunde");
					this.OnBundeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stahlsorte", DbType="VarChar(20)")]
		public string Stahlsorte
		{
			get
			{
				return this._Stahlsorte;
			}
			set
			{
				if ((this._Stahlsorte != value))
				{
					this.OnStahlsorteChanging(value);
					this.SendPropertyChanging();
					this._Stahlsorte = value;
					this.SendPropertyChanged("Stahlsorte");
					this.OnStahlsorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charge", DbType="VarChar(10)")]
		public string Charge
		{
			get
			{
				return this._Charge;
			}
			set
			{
				if ((this._Charge != value))
				{
					this.OnChargeChanging(value);
					this.SendPropertyChanging();
					this._Charge = value;
					this.SendPropertyChanged("Charge");
					this.OnChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anzahl", DbType="Int")]
		public System.Nullable<int> Anzahl
		{
			get
			{
				return this._Anzahl;
			}
			set
			{
				if ((this._Anzahl != value))
				{
					this.OnAnzahlChanging(value);
					this.SendPropertyChanging();
					this._Anzahl = value;
					this.SendPropertyChanged("Anzahl");
					this.OnAnzahlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewicht", DbType="Int")]
		public System.Nullable<int> Gewicht
		{
			get
			{
				return this._Gewicht;
			}
			set
			{
				if ((this._Gewicht != value))
				{
					this.OnGewichtChanging(value);
					this.SendPropertyChanging();
					this._Gewicht = value;
					this.SendPropertyChanged("Gewicht");
					this.OnGewichtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Glühung", DbType="Int")]
		public System.Nullable<int> Id_Glühung
		{
			get
			{
				return this._Id_Glühung;
			}
			set
			{
				if ((this._Id_Glühung != value))
				{
					if (this._Glühung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_GlühungChanging(value);
					this.SendPropertyChanging();
					this._Id_Glühung = value;
					this.SendPropertyChanged("Id_Glühung");
					this.OnId_GlühungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Auftrag", DbType="Int NOT NULL")]
		public int Id_Auftrag
		{
			get
			{
				return this._Id_Auftrag;
			}
			set
			{
				if ((this._Id_Auftrag != value))
				{
					if (this._Auftrag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AuftragChanging(value);
					this.SendPropertyChanging();
					this._Id_Auftrag = value;
					this.SendPropertyChanged("Id_Auftrag");
					this.OnId_AuftragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auftrag_Material", Storage="_Auftrag", ThisKey="Id_Auftrag", OtherKey="Id", IsForeignKey=true)]
		public Auftrag Auftrag
		{
			get
			{
				return this._Auftrag.Entity;
			}
			set
			{
				Auftrag previousValue = this._Auftrag.Entity;
				if (((previousValue != value) 
							|| (this._Auftrag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auftrag.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Auftrag.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._Id_Auftrag = value.Id;
					}
					else
					{
						this._Id_Auftrag = default(int);
					}
					this.SendPropertyChanged("Auftrag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Glühung_Material", Storage="_Glühung", ThisKey="Id_Glühung", OtherKey="Id", IsForeignKey=true)]
		public Glühung Glühung
		{
			get
			{
				return this._Glühung.Entity;
			}
			set
			{
				Glühung previousValue = this._Glühung.Entity;
				if (((previousValue != value) 
							|| (this._Glühung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Glühung.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Glühung.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._Id_Glühung = value.Id;
					}
					else
					{
						this._Id_Glühung = default(Nullable<int>);
					}
					this.SendPropertyChanged("Glühung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
